version: 2

references:

  container_config: &container_config
    docker:
      - image: circleci/ruby:2.4-node
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: ${BUNDLE_PATH}
    working_directory: ~/repos

  bundler_cache_key: &bundler_cache_key
    dependency_gems-{{ checksum "Gemfile.lock" }}
  bundler_backup_cache_key: &bundler_backup_cache_key
    dependency_gems
  restore_dependency_gems: &restore_dependency_gems
    restore_cache:
      keys:
        - *bundler_cache_key
        - *bundler_backup_cache_key

  npm_cache_key: &npm_cache_key
    dependency-npm-{{ checksum "package.json" }}
  npm_backup_cache_key: &npm_backup_cache_key
    dependency-npm
  restore_node_modules: &restore_node_modules
    restore_cache:
      keys:
        - *npm_cache_key
        - *npm_backup_cache_key

jobs:
  build:
    <<: *container_config
    working_directory: ~/repos 
    environment:
      BUNDLE_PATH: vendor/bundle
    branches:
      ignore:
        - gh-pages
    steps:
      - checkout

      # Show environment
      - run:
          name: "Show version"
          command: |
            ruby --version 
            bundle --version
            node --version
            npm --version

      # Make sure all dependencies in your Gemfile are available. 
      - *restore_bundled_gems
      - run: bundle check || bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          key: *bundler_cache_key
          paths:
            - ${BUNDLE_PATH}

      # Make sure all dependencies in your package.json are available. 
      - *restore_node_modules
      - run: npm install
      - save_cache:
          key: *npm_cache_key
          paths:
            - node_modules

      # Run tests
      - run: npm test

      # Run lints
      - run: npm run lint

      # Build a site
      - run: 
          command: bundle exec middleman build
          when: on_success

  # Deploy a site
  deploy-prod:
    <<: *container_config
    working_directory: ~/repos 
    steps:
      - run:
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
                # git config --global user.email msn088g@gmail.com 
                # git config --global user.name circleci
              git fetch origin gh-pages
              bundle exec middleman deploy
            fi

      # # Add SSH keys from a projectâ€™s settings to a container
      # - add_ssh_keys

workflows:
  version: 2
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - develop
  deploy:
    jobs:
      - build
      - deploy-prod:
          requires:
            - build
          filters:
            branches:
              only: master
